Name: cont_delay_synapse - Synapse type for continuous delay

Description:

cont_delay_synapse relaxes the condition that NEST only implements delays 
which are an integer multiple of the time step h. A continuous delay is 
decomposed into an integer part (delay_) and a double (delay_offset_) so 
that the actual delay is given by  delay_*h - delay_offset_. This can be 
combined with off-grid spike times. 
Example: 
SLI 
0 &lt;&lt; /resolution 1.0 &gt;&gt; SetStatus 
/sg /spike_generator &lt;&lt; /precise_times true /spike_times [ 2.0 5.5 ] &gt;&gt; Create 
def 
/n  /iaf_psc_delta_ps Create def 
/sd /spike_detector &lt;&lt; /precise_times true /record_to [ /memory ] &gt;&gt; Create 
def 
/cont_delay_synapse &lt;&lt; /weight 100. /delay 1.7 &gt;&gt; SetDefaults 
sg n /cont_delay_synapse Connect 
n sd Connect 
10 Simulate 
sd GetStatus /events/times :: ==   %  --&gt; &lt;. 3.7 7.2 .&gt;


Transmits:

SpikeEvent, RateEvent, CurrentEvent, ConductanceEvent, 
DoubleDataEvent


Remarks:

All delays set by the normal NEST Connect function will be rounded, even when 
using cont_delay_connection. To set non-grid delays, you must either 
1) set the delay as synapse default, as in the example above 
2) set the delay for each synapse after the connections have been created, 
e.g., 
sg n 100. 1.0 /cont_delay_synapse Connect 
&lt;&lt; /source [ sg ] /synapse_model /cont_delay_synapse &gt;&gt; GetConnections 
{ &lt;&lt; /delay 1.7 &gt;&gt; SetStatus } 
forall 
Alternative 1) is much more efficient, but all synapses then will have the 
same delay. 
Alternative 2) is slower, but allows individual delay values. 
Continuous delays cannot be shorter than the simulation resolution.


Author:

Abigail Morrison


FirstVersion:

June 2007


SeeAlso:

synapsedict
static_synapse
iaf_psc_alpha_ps

Source:

/home/dansan/neuromorphic/source/snn/nest-simulator-2.20.0/models/cont_delay_connection.h
