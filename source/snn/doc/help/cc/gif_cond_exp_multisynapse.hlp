Name: gif_cond_exp_multisynapse - Conductance-based generalized
integrate-and-fire neuron model with multiple synaptic time constants
according to Mensi et al. (2012) and Pozzorini et al. (2015).

Description:

gif_cond_exp_multisynapse is the generalized integrate-and-fire neuron 
according to Mensi et al. (2012) and Pozzorini et al. (2015), with 
post-synaptic conductances in the form of truncated exponentials. 
This model features both an adaptation current and a dynamic threshold for 
spike-frequency adaptation. The membrane potential (V) is described by the 
differential equation: 
@f[ 
C*dV(t)/dt = -g_L*(V(t)-E_L) - \eta_1(t) - \eta_2(t) - \ldots - \eta_n(t) 
+ I(t) 
@f] 
where each \f$ eta_i \f$ is a spike-triggered current (stc), and the neuron model can 
have arbitrary number of them. 
Dynamic of each \f$ eta_i \f$ is described by: 
@f[ 
\tau_{\eta_i}*d{\eta_i}/dt = -\eta_i 
@f] 
and in case of spike emission, its value increased by a constant (which can be 
positive or negative): 
@f[ 
\eta_i = \eta_i + q_{\eta_i}  \text{ (in case of spike emission).} 
@f] 
Neuron produces spikes STOCHASTICALLY according to a point process with the 
firing intensity: 
@f[ 
\lambda(t) = \lambda_0 * \exp[ (V(t)-V_T(t)) / \Delta_V ] 
@f] 
where \f$ V_T(t) \f$ is a time-dependent firing threshold: 
@f[ 
V_T(t) = V_{T_{star}} + \gamma_1(t) + \gamma_2(t) + \ldots + \gamma_m(t) 
@f] 
where gamma_i is a kernel of spike-frequency adaptation (sfa), and the neuron 
model can have arbitrary number of them. 
Dynamic of each \f$ gamma_i \f$ is described by: 
@f[ 
\tau_{\gamma_i}*d{\gamma_i}/dt = -\gamma_i 
@f] 
and in case of spike emission, its value increased by a constant (which can be 
positive or negative): 
@f[ 
\gamma_i = \gamma_i + q_{\gamma_i} \text{ (in case of spike emission).} 
@f] 
Note that in the current implementation of the model (as described in [1] and 
[2]) the values of \f$ eta_i \f$ and \f$ gamma_i \f$ are affected immediately 
after spike emission. However, GIF toolbox (http://wiki.epfl.ch/giftoolbox) 
which fits the model using experimental data, requires a different set of 
\f$ eta_i \f$ and  \f$ gamma_i \f$. It applies the jump of \f$ eta_i  \f$ and 
\f$ gamma_i \f$ after the refractory period. One can easily convert between 
\f$ q_eta/gamma \f$ of these two approaches: 
\f$ q_eta_giftoolbox = q_eta_NEST * (1 - exp( -tau_ref / tau_eta )) /f$ 
The same formula applies for /f$ q_gamma /f$. 
On the postsynapic side, there can be arbitrarily many synaptic time constants 
(gif_psc_exp has exactly two: tau_syn_ex and tau_syn_in). This can be reached 
by specifying separate receptor ports, each for a different time constant. The 
port number has to match the respective "receptor_type" in the connectors. 
The shape of synaptic conductance is exponential.


Parameters:

The following parameters can be set in the status dictionary. 
\verbatim embed:rst 
=========   ======   ====================================================== 
**Membrane Parameters** 
--------------------------------------------------------------------------- 
C_m         pF      Capacity of the membrane 
t_ref       ms      Duration of refractory period 
V_reset     mV      Reset value for V_m after a spike 
E_L         mV      Leak reversal potential 
g_L         nS      Leak conductance 
I_e         pA      Constant external input current 
========   ======   ====================================================== 
========= ==============  ===================================================== 
**Spike adaptation and firing intensity parameters** 
------------------------------------------------------------------------------- 
q_stc      list of nA        Values added to spike-triggered currents (stc) 
after each spike emission 
tau_stc    list of ms        Time constants of stc variables 
q_sfa      list of mV        Values added to spike-frequency adaptation 
(sfa) after each spike emission 
tau_sfa    list of ms        Time constants of sfa variables 
Delta_V    mV                Stochasticity level 
lambda_0   real              Stochastic intensity at firing threshold V_T i 
n 1/s. 
V_T_star   mV                Base threshold 
========= ==============  ===================================================== 
=========   =============  =================================================== 
**Synaptic parameters** 
------------------------------------------------------------------------------ 
tau_syn    list of ms     Time constants of the synaptic conductance 
(same size as E_rev) 
E_rev      list of mV     Reversal potentials (same size as tau_syn) 
=========   =============  =================================================== 
==============  ======  ====================================================== 
**Integration parameters** 
------------------------------------------------------------------------------ 
gsl_error_tol  real    This parameter controls the admissible error of the 
GSL integrator. Reduce it if NEST complains about 
numerical instabilities 
==============  ======  ====================================================== 
\endverbatim 
Example: 
neuron = nest.Create('gif_cond_exp_multisynapse', 
params={'E_rev': [0.0, -85.0], 
'tau_syn': [4.0, 8.0]}) 
spike = nest.Create('spike_generator', params={'spike_times': 
np.array([10.0])}) 
delays = [1., 30.] 
w = [1., 5.] 
for syn in range(2): 
nest.Connect(spike, neuron, syn_spec={'model': 'static_synapse', 
'receptor_type': 1 + syn, 
'weight': w[syn], 
'delay': delays[syn]}) 
nest.Simulate(100.)


Receives:

SpikeEvent, CurrentEvent, DataLoggingRequest


Sends:

SpikeEvent


References:

\verbatim embed:rst 
.. [1] Mensi S, Naud R, Pozzorini C, Avermann M, Petersen CC, Gerstner W (2012) 
Parameter extraction and classification of three cortical neuron types 
reveals two distinct adaptation mechanisms. Journal of 
Neurophysiology, 107(6):1756-1775. 
DOI: https://doi.org/10.1152/jn.00408.2011 
.. [2] Pozzorini C, Mensi S, Hagens O, Naud R, Koch C, Gerstner W (2015). 
Automated high-throughput characterization of single neurons by means of 
simplified spiking models. PLoS Computational Biology, 11(6), e1004275. 
DOI: https://doi.org/10.1371/journal.pcbi.1004275 
\endverbatim


Author:

March 2016, Setareh


SeeAlso:

pp_psc_delta
gif_cond_exp
iaf_psc_exp_multisynapse
gif_psc_exp_multisynapse

Source:

/home/dansan/neuromorphic/source/snn/nest-simulator-2.20.0/models/gif_cond_exp_multisynapse.h
